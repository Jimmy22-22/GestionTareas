@page "/tareas/read/{Id:int}"
@inject TareaService TareaService
@inject NavigationManager Navigation

<h3><i class="bi bi-eye-fill"></i> Detalles de Tarea</h3>

@if (tarea != null)
{
    <div class="card p-3 shadow-sm">
        <h5 class="card-title"><i class="bi bi-card-text"></i> @tarea.Titulo</h5>
        <p class="card-text">
            <strong>Descripción:</strong> @tarea.Descripcion
        </p>
        <p class="card-text">
            <strong>Fecha Límite:</strong> @tarea.FechaLimite.ToString("dd/MM/yyyy")
        </p>
        <p class="card-text">
            <strong>Usuario Asignado:</strong> @tarea.Usuario?.Nombre
        </p>
        <p class="card-text">
            <strong>Estado:</strong> @(tarea.Completada ? "✅ Completada" : "❌ Pendiente")
        </p>

        <div class="mt-3">
            <a href="/" class="btn btn-secondary">
                <i class="bi bi-arrow-left"></i> Volver
            </a>
            <a class="btn btn-primary ms-2" href="/tareas/edit/@tarea.Id">
                <i class="bi bi-pencil-square"></i> Editar
            </a>
        </div>
    </div>
}
else
{
    <p>Cargando tarea...</p>
}

@code {
    [Parameter] public int Id { get; set; }
    private Tarea? tarea;

    protected override async Task OnInitializedAsync()
    {
        tarea = await TareaService.ObtenerPorId(Id);
    }
}
