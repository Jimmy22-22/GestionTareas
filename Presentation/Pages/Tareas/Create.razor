@page "/tareas/create"
@inject TareaService TareaService
@inject UsuarioService UsuarioService
@inject NavigationManager Navigation

<h3 class="titulo-formulario">
    <i class="bi bi-plus-circle-fill icono-titulo"></i> Nueva Tarea
</h3>

<EditForm Model="nuevaTarea" OnValidSubmit="CrearTarea" class="formulario-nueva-tarea">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label class="etiqueta">Título:</label>
        <InputText class="input-text form-control" @bind-Value="nuevaTarea.Titulo" placeholder="Escribe el título de la tarea..." />
    </div>
    <div class="form-group">
        <label class="etiqueta">Descripción:</label>
        <InputText class="input-text form-control" @bind-Value="nuevaTarea.Descripcion" placeholder="Describe brevemente la tarea..." />
    </div>
    <div class="form-group">
        <label class="etiqueta">Fecha Límite:</label>
        <InputDate class="input-date form-control" @bind-Value="nuevaTarea.FechaLimite" TValue="DateTime" />
    </div>
    <div class="form-group">
        <label class="etiqueta">Usuario:</label>
        <InputSelect class="input-select form-select" @bind-Value="nuevaTarea.UsuarioId" TValue="int">
            <option value="0" disabled>-- Selecciona un usuario --</option>
            @foreach (var u in usuarios)
            {
                <option value="@u.Id">@u.Nombre</option>
            }
        </InputSelect>
    </div>

    <button class="btn-crear mt-3" type="submit">
        <i class="bi bi-check-circle icono-boton"></i> Crear Tarea
    </button>
</EditForm>

<style>
    .formulario-nueva-tarea {
        max-width: 500px;
        margin: 0 auto;
        padding: 2rem;
        background: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .titulo-formulario {
        text-align: center;
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 1.5rem;
    }

    .icono-titulo {
        color: #4caf50;
        margin-right: 0.5rem;
    }

    .etiqueta {
        font-size: 0.9rem;
        color: #555;
        margin-bottom: 0.5rem;
        display: block;
    }

    .input-text,
    .input-date,
    .input-select {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 0.9rem;
        transition: border-color 0.3s ease;
    }

        .input-text:focus,
        .input-date:focus,
        .input-select:focus {
            border-color: #4caf50;
            outline: none;
        }

    .btn-crear {
        width: 100%;
        padding: 0.75rem;
        background-color: #4caf50;
        color: #fff;
        font-size: 1rem;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-crear:hover {
            background-color: #45a049;
        }

    .icono-boton {
        margin-right: 0.5rem;
    }
</style>


@code {
    private Tarea nuevaTarea = new();
    private List<Usuario> usuarios = new();

    protected override async Task OnInitializedAsync()
    {
        usuarios = await UsuarioService.ObtenerTodos();
        if (usuarios.Any())
            nuevaTarea.UsuarioId = usuarios.First().Id;
    }

    private async Task CrearTarea()
    {
        await TareaService.Crear(nuevaTarea);
        Navigation.NavigateTo("/");
    }
}
