@page "/tareas/edit/{Id:int}"
@inject TareaService TareaService
@inject UsuarioService UsuarioService
@inject NavigationManager Navigation

<h3 class="titulo-formulario">
    <i class="bi bi-pencil-square icono-titulo"></i> Editar Tarea
</h3>

@if (tarea != null)
{
    <EditForm Model="tarea" OnValidSubmit="Guardar" class="formulario-editar-tarea">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label class="etiqueta">Título:</label>
            <InputText class="input-text form-control" @bind-Value="tarea.Titulo" placeholder="Escribe el título de la tarea..." />
        </div>
        <div class="form-group">
            <label class="etiqueta">Descripción:</label>
            <InputText class="input-text form-control" @bind-Value="tarea.Descripcion" placeholder="Describe brevemente la tarea..." />
        </div>
        <div class="form-group">
            <label class="etiqueta">Fecha Límite:</label>
            <InputDate class="input-date form-control" @bind-Value="tarea.FechaLimite" TValue="DateTime" />
        </div>
        <div class="form-group">
            <label class="etiqueta">Usuario:</label>
            <InputSelect class="input-select form-select" @bind-Value="tarea.UsuarioId" TValue="int">
                @foreach (var u in usuarios)
                {
                    <option value="@u.Id">@u.Nombre</option>
                }
            </InputSelect>
        </div>
        <div class="form-check mt-2">
            <InputCheckbox class="checkbox-input form-check-input" @bind-Value="tarea.Completada" TValue="bool" />
            <label class="checkbox-label form-check-label ms-2">Completada</label>
        </div>

        <button class="btn-guardar mt-3">
            <i class="bi bi-save icono-boton"></i> Guardar Cambios
        </button>
    </EditForm>
}
else
{
    <p class="mensaje-cargando">Cargando...</p>
}

<style>
    .formulario-editar-tarea {
        max-width: 500px;
        margin: 0 auto;
        padding: 2rem;
        background: #ffffff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.06);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .titulo-formulario {
        text-align: center;
        font-size: 1.5rem;
        font-weight: bold;
        color: #333;
        margin-bottom: 1.5rem;
    }

    .icono-titulo {
        color: #0d6efd;
        margin-right: 0.5rem;
    }

    .etiqueta {
        font-size: 0.9rem;
        color: #555;
        margin-bottom: 0.5rem;
        display: block;
    }

    .input-text,
    .input-date,
    .input-select {
        width: 100%;
        padding: 0.75rem;
        border: 1px solid #ddd;
        border-radius: 8px;
        font-size: 0.9rem;
        transition: border-color 0.3s ease;
    }

        .input-text:focus,
        .input-date:focus,
        .input-select:focus {
            border-color: #0d6efd;
            outline: none;
        }

    .checkbox-input {
        width: 1.2rem;
        height: 1.2rem;
        margin-top: 0.2rem;
    }

    .checkbox-label {
        font-size: 0.9rem;
        color: #555;
    }

    .btn-guardar {
        width: 100%;
        padding: 0.75rem;
        background-color: #0d6efd;
        color: #fff;
        font-size: 1rem;
        font-weight: bold;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn-guardar:hover {
            background-color: #0b5ed7;
        }

    .icono-boton {
        margin-right: 0.5rem;
    }

    .mensaje-cargando {
        text-align: center;
        font-size: 1rem;
        color: #555;
    }
</style>



@code {
    [Parameter] public int Id { get; set; }

    private Tarea? tarea;
    private List<Usuario> usuarios = new();

    protected override async Task OnInitializedAsync()
    {
        tarea = await TareaService.ObtenerPorId(Id);
        usuarios = await UsuarioService.ObtenerTodos();
    }

    private async Task Guardar()
    {
        await TareaService.Editar(tarea!);
        Navigation.NavigateTo("/");
    }
}
