@page "/proyectos/edit/{Id:int}"
@inject ProyectoService ProyectoService
@inject UsuarioService UsuarioService
@inject NavigationManager Navigation

<h3><i class="bi bi-pencil-square"></i> Editar Proyecto</h3>

@if (proyecto != null)
{
    <EditForm Model="proyecto" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Nombre:</label>
            <InputText class="form-control" @bind-Value="proyecto.Nombre" />
        </div>
        <div class="form-group">
            <label>Descripción:</label>
            <InputText class="form-control" @bind-Value="proyecto.Descripcion" />
        </div>
        <div class="form-group">
            <label>Fecha de Inicio:</label>
            <InputDate class="form-control" @bind-Value="proyecto.FechaInicio" TValue="DateTime" />
        </div>
        <div class="form-group">
            <label>Fecha de Fin:</label>
            <InputDate class="form-control" @bind-Value="proyecto.FechaFin" TValue="DateTime?" />
        </div>
        <div class="form-group">
            <label>Responsable:</label>
            <InputSelect class="form-select" @bind-Value="proyecto.UsuarioId" TValue="int?">
                @foreach (var u in usuarios)
                {
                    <option value="@u.Id">@u.Nombre</option>
                }
            </InputSelect>
        </div>

        <button class="btn btn-primary mt-3"><i class="bi bi-save"></i> Guardar</button>
    </EditForm>
}
else
{
    <p>Cargando...</p>
}

@code {
    [Parameter] public int Id { get; set; }

    private Proyecto? proyecto;
    private List<Usuario> usuarios = new();

    protected override async Task OnInitializedAsync()
    {
        proyecto = await ProyectoService.ObtenerPorId(Id);
        usuarios = await UsuarioService.ObtenerTodos();
    }

    private async Task Guardar()
    {
        if (proyecto != null)
        {
            await ProyectoService.Editar(proyecto);
            Navigation.NavigateTo("/proyectos");
        }
    }
}
