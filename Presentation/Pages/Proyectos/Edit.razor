@page "/proyectos/edit/{Id:int}"
@inject ProyectoService ProyectoService
@inject UsuarioService UsuarioService
@inject NavigationManager Navigation

<h3 class="titulo-formulario">
    <i class="bi bi-pencil-square icono-titulo"></i> Editar Proyecto
</h3>

@if (proyecto != null)
{
    <EditForm Model="proyecto" OnValidSubmit="Guardar" class="formulario-editar-proyecto">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label class="etiqueta">Nombre:</label>
            <InputText class="input-text form-control" @bind-Value="proyecto.Nombre" placeholder="Nombre del proyecto..." />
        </div>

        <div class="form-group">
            <label class="etiqueta">Descripción:</label>
            <InputText class="input-text form-control" @bind-Value="proyecto.Descripcion" placeholder="Breve descripción..." />
        </div>

        <div class="form-group">
            <label class="etiqueta">Fecha de Inicio:</label>
            <InputDate class="input-date form-control" @bind-Value="proyecto.FechaInicio" TValue="DateTime" />
        </div>

        <div class="form-group">
            <label class="etiqueta">Fecha de Fin:</label>
            <InputDate class="input-date form-control" @bind-Value="proyecto.FechaFin" TValue="DateTime?" />
        </div>

        <div class="form-group">
            <label class="etiqueta">Responsable:</label>
            <InputSelect class="input-select form-select" @bind-Value="proyecto.UsuarioId" TValue="int?">
                <option value="">-- Selecciona un usuario --</option>
                @foreach (var u in usuarios)
                {
                    <option value="@u.Id">@u.Nombre</option>
                }
            </InputSelect>
        </div>

        <button class="btn-guardar mt-4">
            <i class="bi bi-save icono-boton"></i> Guardar Cambios
        </button>
    </EditForm>
}
else
{
    <p class="mensaje-cargando">
        <i class="bi bi-hourglass-split"></i> Cargando...
    </p>
}

<style>
    .formulario-editar-proyecto {
        max-width: 550px;
        margin: 0 auto;
        padding: 2rem;
        background: #1e1e1e;
        border-radius: 14px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .titulo-formulario {
        text-align: center;
        font-size: 1.6rem;
        font-weight: bold;
        color: #f0f0f0;
        margin-bottom: 1.5rem;
    }

    .icono-titulo {
        color: #6c63ff;
        margin-right: 0.5rem;
    }

    .etiqueta {
        font-size: 0.95rem;
        color: #cccccc;
        margin-bottom: 0.5rem;
        display: block;
    }

    .input-text,
    .input-date,
    .input-select {
        width: 100%;
        padding: 0.75rem;
        background-color: #2a2a2a;
        color: #ffffff;
        border: 1px solid #444;
        border-radius: 8px;
        font-size: 0.95rem;
        transition: border-color 0.3s ease;
    }

        .input-text:focus,
        .input-date:focus,
        .input-select:focus {
            border-color: #6c63ff;
            outline: none;
            background-color: #333;
        }

    .btn-guardar {
        width: 100%;
        padding: 0.75rem;
        background-color: #6c63ff;
        color: #fff;
        font-size: 1rem;
        font-weight: bold;
        border: none;
        border-radius: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

        .btn-guardar:hover {
            background-color: #574fd6;
            transform: scale(1.02);
        }

    .icono-boton {
        margin-right: 0.5rem;
    }

    .mensaje-cargando {
        text-align: center;
        font-size: 1rem;
        color: #aaa;
        margin-top: 2rem;
    }
</style>

@code {
    [Parameter] public int Id { get; set; }

    private Proyecto? proyecto;
    private List<Usuario> usuarios = new();

    protected override async Task OnInitializedAsync()
    {
        proyecto = await ProyectoService.ObtenerPorId(Id);
        usuarios = await UsuarioService.ObtenerTodos();
    }

    private async Task Guardar()
    {
        if (proyecto != null)
        {
            await ProyectoService.Editar(proyecto);
            Navigation.NavigateTo("/proyectos");
        }
    }
}
